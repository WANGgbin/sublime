{
	"folder_history":
	[
		"/home/guobin/srsLTE",
		"/home/guobin/MyTinySTL",
		"/home/guobin/Desktop/UNIX/UNIXC",
		"/home/guobin/Desktop/UNIX/UNIXC/exercise"
	],
	"last_version": 3176,
	"last_window_id": 32,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 0.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"reu",
						"return\t(stl_dequeue.h)"
					],
					[
						"par",
						"partition\tabc"
					],
					[
						"GET",
						"GET_STATUS_OF_OFFSET\tabc"
					],
					[
						"READ_",
						"READ_END_OFFSET\tabc"
					],
					[
						"WRITE",
						"WRITE_CUR_OFFSET\tabc"
					],
					[
						"READ",
						"READ_CUR_OFFSET\tabc"
					],
					[
						"valid",
						"validPalindrome\tabc"
					],
					[
						"bunck",
						"buncket\tabc"
					],
					[
						"bun",
						"bunckets\tabc"
					],
					[
						"sel",
						"select1st\t(stl_function.h)"
					],
					[
						"ALloc",
						"Alloc\t(stl_hashtable.h)"
					],
					[
						"eau",
						"equal_to\t(stl_function.h)"
					],
					[
						"_STL_HA",
						"_STL_HASH_MAP_H\tabc"
					],
					[
						"ALo",
						"Alloc\t(stl_hashtable.h)"
					],
					[
						"bu",
						"bunckets\tabc"
					],
					[
						"num",
						"num_elements\tabc"
					],
					[
						"buncket",
						"buncket\tabc"
					],
					[
						"destro",
						"destroy_node\tabc"
					],
					[
						"bkt",
						"bkt_key_num\tabc"
					],
					[
						"ojb",
						"obj2\t(stl_vector.h)"
					],
					[
						"bunc",
						"bunckets\tabc"
					],
					[
						"inert_e",
						"insert_equal_noresize\tabc"
					],
					[
						"inset_uni",
						"insert_unqiue_noresize\tabc"
					],
					[
						"forwa",
						"forward_iterator_tag\t(stl_slist.h)"
					],
					[
						"itear",
						"iterator\tabc"
					],
					[
						"iterao",
						"iterator\tabc"
					],
					[
						"Key",
						"KeyOfValue\tabc"
					],
					[
						"insert_qu",
						"insert_equal"
					],
					[
						"Ke",
						"KeyOfValue\tabc"
					],
					[
						"rb_tree_rota",
						"rb_tree_rotate_left\tabc"
					],
					[
						"color",
						"color\tabc"
					],
					[
						"ALlo",
						"Alloc\tabc"
					],
					[
						"ptr",
						"ptr\tabc"
					],
					[
						"slist_itear",
						"slist_iterator_base\tabc"
					],
					[
						"slist_i",
						"slist_iterator\tabc"
					],
					[
						"dista",
						"distance_type\tabc"
					],
					[
						"left",
						"left_child_value\tabc"
					],
					[
						"Rand",
						"RandomAccessIterator\t(stl_algobase.h)"
					],
					[
						"OBJ",
						"obj2"
					],
					[
						"itera",
						"iterator_category\tabc"
					],
					[
						"copy_",
						"copy_initialize\tabc"
					],
					[
						"create",
						"create_map_and_nodes\tabc"
					],
					[
						"cr",
						"create_map_and_nodes\tabc"
					],
					[
						"eme",
						"elements_before_pos\tabc"
					],
					[
						"uni",
						"uninitialized_copy\tabc"
					],
					[
						"un",
						"uninitialized_copy\tabc"
					],
					[
						"elem",
						"elements_after_pos\tabc"
					],
					[
						"data_",
						"data_allocate\tabc"
					],
					[
						"reserve_map",
						"reserve_map_at_back\tabc"
					],
					[
						"new_ma",
						"new_map_size\tabc"
					],
					[
						"uninitial",
						"uninitialized_fill_n\t(stl_vector.h)"
					],
					[
						"crea",
						"create_nodes\tabc"
					],
					[
						"creat",
						"create_map_and_nodes\tabc"
					],
					[
						"deque",
						"dequeue_iterator\tabc"
					],
					[
						"list_ite",
						"list_iterator\tabc"
					],
					[
						"IN",
						"Interator2\tabc"
					],
					[
						"In",
						"Interator1\tabc"
					],
					[
						"data",
						"data_allocator\tabc"
					],
					[
						"firs",
						"first2\tabc"
					],
					[
						"fir",
						"first1\tabc"
					],
					[
						"emp",
						"empty_initialized\tabc"
					],
					[
						"destr",
						"destroy_node\tabc"
					],
					[
						"list_i",
						"list_iterator\tabc"
					],
					[
						"list_nod",
						"list_node_base\tabc"
					],
					[
						"list",
						"list_iterator_base\tabc"
					],
					[
						"fii",
						"finish\tabc"
					],
					[
						"u",
						"uninitialized_copy\tabc"
					],
					[
						"el",
						"elements_after\tabc"
					],
					[
						"end",
						"end_of_storage\tabc"
					],
					[
						"fill",
						"fill_initialize\tabc"
					],
					[
						"allo",
						"allocate_and_fill\tabc"
					],
					[
						"iter",
						"iterator_category\tabc"
					],
					[
						"_d",
						"__default_alloc_template\tabc"
					],
					[
						"is",
						"is_POD\tabc"
					],
					[
						"is_P",
						"is_POD_type\tabc"
					],
					[
						"__c",
						"__copy_backward\tabc"
					],
					[
						"ite",
						"iterator_category\tabc"
					],
					[
						"Bi",
						"BidirectionalIterator2\tabc"
					],
					[
						"B",
						"BidirectionalIterator1\tabc"
					],
					[
						"___co",
						"___copy_backward_called\tabc"
					],
					[
						"Ra",
						"RandomAccessIterator2\tabc"
					],
					[
						"Random",
						"RandomAccessIterator2\tabc"
					],
					[
						"Ran",
						"RandomAccessIterator1\tabc"
					],
					[
						"___copy",
						"___copy_backward\tabc"
					],
					[
						"___cop",
						"___copy_backward\tabc"
					],
					[
						"has",
						"has_trivial_default_constructor\t(type_traits.h)"
					],
					[
						"Bid",
						"BidirectionalIterator2\tabc"
					],
					[
						"iterator_",
						"iterator_traits\t(stl_iterator.h)"
					],
					[
						"oU",
						"Outerator"
					],
					[
						"class",
						"class\tabc"
					],
					[
						"has_trivai",
						"has_trivial_assignment_operator\t(type_traits.h)"
					],
					[
						"mall",
						"malloc_alloc\tabc"
					],
					[
						"F",
						"FREELIST_INDEX\tabc"
					],
					[
						"FREE",
						"free_list"
					],
					[
						"PTR",
						"ptr_of_dest_list"
					],
					[
						"bytes",
						"bytes_to_get\tabc"
					],
					[
						"malloc_",
						"malloc_alloc\tabc"
					],
					[
						"__",
						"__malloc_alloc_template\tabc"
					],
					[
						"ma",
						"malloc_handler\tabc"
					],
					[
						"oom_",
						"oom_allocate\tabc"
					],
					[
						"malloc_ha",
						"malloc_handler\tabc"
					],
					[
						"malloc",
						"malloc_handler_t\tabc"
					],
					[
						"T",
						"T"
					],
					[
						"Ky",
						"KeyOfValue"
					],
					[
						"my_",
						"my_iterator"
					],
					[
						"ba",
						"black"
					],
					[
						"my",
						"my_space1"
					],
					[
						"ns",
						"namespace"
					],
					[
						"stac",
						"stack_obj"
					],
					[
						"stc",
						"stack_obj"
					],
					[
						"di",
						"difference_type"
					],
					[
						"r",
						"RandomAccessIterator"
					],
					[
						"I",
						"I"
					],
					[
						"set",
						"setNext"
					],
					[
						"oj",
						"obj2"
					],
					[
						"R",
						"RTM_GET"
					],
					[
						"AF_",
						"AF_INET6"
					],
					[
						"sockaddr_in",
						"sockaddr_in6"
					],
					[
						"co",
						"connect_nonb"
					],
					[
						"of",
						"oflagstr"
					],
					[
						"AF_in",
						"AF_INET"
					],
					[
						"sockaddr",
						"sockaddr_un"
					],
					[
						"ex",
						"exit_process1"
					],
					[
						"exit_pr",
						"exit_process2"
					],
					[
						"AF_inet",
						"AF_INET6"
					],
					[
						"n",
						"n"
					],
					[
						"d",
						"d"
					],
					[
						"sin_",
						"sin_family"
					]
				]
			},
			"build_system_choices":
			[
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/Makefile/Make.sublime-build",
							""
						],
						[
							"Packages/Makefile/Make.sublime-build",
							"Clean"
						]
					],
					[
						"Packages/Makefile/Make.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"key",
						"Preferences: Key Bindings"
					],
					[
						"k",
						"Preferences: Key Bindings"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"remo",
						"Package Control: Remove Package"
					],
					[
						"dele",
						"ANF: Delete Current File"
					],
					[
						"ke",
						"Preferences: Key Bindings"
					],
					[
						"sett",
						"Preferences: Settings"
					],
					[
						"settings",
						"Preferences: Settings"
					],
					[
						"setting",
						"Preferences: Settings"
					],
					[
						"Package Control: ",
						"Package Control: List Packages"
					],
					[
						"keybindings",
						"Preferences: Key Bindings"
					],
					[
						"rei",
						"Indentation: Reindent Lines"
					],
					[
						"re",
						"Indentation: Reindent Lines"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"keyb",
						"Preferences: Key Bindings"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 238.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
					"sublime.log_commands(True)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/guobin/MyTinySTL/allocator/my_stl_alloc.h",
				"/home/guobin/MyTinySTL/allocator/defalloc.h",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/cltou.cpp",
				"/home/guobin/MyTinySTL/container/associative container/stl_hashtable.h",
				"/home/guobin/MyTinySTL/container/sequence container/stl_slist.h",
				"/home/guobin/MyTinySTL/container/sequence container/stl_list.h",
				"/home/guobin/MyTinySTL/container/sequence container/stl_vector.h",
				"/home/guobin/MyTinySTL/container/stl_dequeue.h",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/symbol.cc",
				"/home/guobin/MyTinySTL/container/associative container/stl_tree.h",
				"/home/guobin/MyTinySTL/container/sequence container/stl_heap.h",
				"/home/guobin/MyTinySTL/container/sequence container/stl_stack.h",
				"/home/guobin/MyTinySTL/algorithm/stl_algobase.h",
				"/home/guobin/MyTinySTL/container/associative container/stl_hash_map.h",
				"/home/guobin/MyTinySTL/container/associative container/stl_hash_set.h",
				"/home/guobin/MyTinySTL/functor/stl_function.h",
				"/home/guobin/MyTinySTL/container/associative container/stl_set.h",
				"/home/guobin/MyTinySTL/container/sequence container/stl_priority_queue.h",
				"/home/guobin/MyTinySTL/container/sequence container/stl_queue.h",
				"/home/guobin/MyTinySTL/iterator/stl_iterator.h",
				"/home/guobin/MyTinySTL/allocator/stl_uninitialized.h",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/foo.cc",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/foo.h",
				"/home/guobin/notes",
				"/home/guobin/srsLTE/lib/src/common/mac_pcap.cc",
				"/home/guobin/srsLTE/lib/include/srslte/common/common.h",
				"/home/guobin/srsLTE/lib/src/common/rlc_pcap.cc",
				"/home/guobin/srsLTE/lib/src/upper/rlc_am.cc",
				"/home/guobin/srsLTE/lib/include/srslte/upper/rlc_am.h",
				"/home/guobin/srsLTE/lib/include/srslte/upper/rlc_common.h",
				"/home/guobin/srsLTE/srsue/hdr/stack/ue_stack_lte.h",
				"/home/guobin/srsLTE/lib/include/srslte/upper/rlc_tx_queue.h",
				"/home/guobin/srsLTE/lib/include/srslte/upper/rlc_tm.h",
				"/home/guobin/srsLTE/lib/include/srslte/upper/rlc.h",
				"/home/guobin/srsLTE/lib/src/upper/pdcp_entity.cc",
				"/home/guobin/srsLTE/lib/include/srslte/upper/pdcp_entity.h",
				"/home/guobin/srsLTE/lib/include/srslte/interfaces/ue_interfaces.h",
				"/home/guobin/srsLTE/lib/include/srslte/upper/pdcp.h",
				"/home/guobin/srsLTE/lib/test/asn1/srslte_asn1_rrc_ul_dcch_test.cc",
				"/home/guobin/srsLTE/srsue/src/stack/rrc/rrc.cc",
				"/home/guobin/srsLTE/srsue/hdr/stack/rrc/rrc.h",
				"/home/guobin/srsLTE/srsue/src/stack/upper/nas.cc",
				"/home/guobin/srsLTE/srsue/src/ue.cc",
				"/home/guobin/srsLTE/srsue/src/stack/ue_stack_lte.cc",
				"/home/guobin/srsLTE/lib/include/srslte/common/pdu.h",
				"/home/guobin/srsLTE/lib/include/srslte/common/interfaces_common.h",
				"/home/guobin/srsLTE/lib/src/common/pdu.cc",
				"/home/guobin/srsLTE/srsue/hdr/stack/mac/ul_harq.h",
				"/home/guobin/srsLTE/lib/src/upper/rlc.cc",
				"/home/guobin/srsLTE/srsenb/src/stack/mac/ue.cc",
				"/home/guobin/MyTinySTL/allocator/stl_construct.h",
				"/home/guobin/MyTinySTL/iterator/type_traits.h",
				"/home/guobin/MyTinySTL/container/sequence container",
				"/home/guobin/Desktop/UNIX/UNIXC/allocator/defalloc.h",
				"/home/guobin/Desktop/UNIX/UNIXC/allocator/my_stl_alloc.h",
				"/home/guobin/Desktop/UNIX/UNIXC/foo.h",
				"/home/guobin/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
				"/home/guobin/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
				"/home/guobin/.config/sublime-text-3/Packages/Terminal/Default (Linux).sublime-keymap",
				"/home/guobin/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
				"/home/guobin/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
				"/home/guobin/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/exercise1.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/exercise.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/sharefile",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/SctpServer.c",
				"/home/guobin/Desktop/SctpServer.c",
				"/home/guobin/Desktop/Gtpv2Client.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/fifo.h",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/exercise2.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/UnixSocketServ.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/UnixSocketCli.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/svmsg.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/server1.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/test.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/process.c",
				"/home/guobin/Desktop/Gtpv2Server.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/test",
				"/dev/shm/my_first_shm",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/svmsg.h",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/get.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/cont.c"
			],
			"find":
			{
				"height": 29.0
			},
			"find_in_files":
			{
				"height": 355.0,
				"where_history":
				[
					"~srsLTE"
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"begin",
					"erase",
					"find",
					"back()",
					"__shared_count",
					"__shared_ptr",
					"_Sp_counted_base",
					"__shared_count",
					"__shared_count_base",
					"__shared_counted_base",
					"__shared_count_base",
					"__shared_count",
					"__shared_ptr",
					"_Sp_counted_deleter",
					"__shared_count",
					"__shared_ptr",
					"__shraed_ptr",
					"_Sp_counted_base",
					"__shared_count",
					"__shared_ptr",
					"__enable_shared_from_this_helper",
					"_M_weak_assign",
					"shared_from_this",
					"__shared_ptr",
					"shared_ptr",
					"shared_from_this",
					"__weak_ptr",
					"weak_ptr",
					"_M_weak_this",
					"enable_shared_from_this",
					"__shared_count",
					"__shared_ptr",
					"FILE",
					"_M_mutate(",
					"resize(",
					"erase",
					"reserve(",
					"reserve",
					"reserve(",
					"shrink_to_fit",
					"count(",
					"stoi",
					"find",
					"getline",
					"substr",
					"replace",
					"assign",
					"insert",
					"push_back",
					"clear",
					"assign",
					"compare",
					"copmare",
					"comparison",
					"resize",
					"compare",
					"at(",
					"operator[]",
					"size()",
					"size(){",
					"size()",
					"_M_set_length",
					"_M_create",
					"push_back",
					"reserve",
					"size(",
					"_M_construct(",
					"_M_construct",
					"_M_data",
					"_M_is_local()",
					"_M_allocated_capacity",
					"capacity",
					"resize",
					"reserve",
					"_M_construct",
					"basic_string(",
					"basic_string",
					"_M_data",
					"c_str(",
					"c_str",
					"capacity",
					"push_back",
					"string",
					"basic_string",
					"find",
					"npos",
					"find",
					"insert",
					"distance_type",
					"distance",
					"STACK",
					"operator=",
					"distance",
					"build",
					"write_sdu",
					"am ",
					"build_data_pdu",
					"pdu",
					"read_pdu",
					"pdu.h",
					"write_packet",
					"buffer_tx",
					"write_packet",
					"add_sdu",
					"read_pdu",
					"interfaces_common.h",
					"read_pdu",
					"write_sdu",
					"rlc_tx_queue",
					"write_sdu",
					"write_pdu",
					"handle_data_pdu",
					"rlc_amd_pdu_header_t",
					"attach request",
					"mac_pcap",
					"mac_pcap.h",
					"write_sdu",
					"rlc_array",
					"write_sdu",
					"pdcp_array",
					"rlc",
					"mac_pcap",
					"tx",
					"rlc",
					"srslte/upper/rlc.h",
					"rlc.h",
					"rlc_tm.h",
					"write_sdu"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"difference_type",
					"queue",
					"my_iterator_traits"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 29.0
			},
			"input":
			{
				"height": 121.0
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 125.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 54.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"",
						"use_of_sublime"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 220.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 0.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"reu",
						"return\t(stl_dequeue.h)"
					],
					[
						"par",
						"partition\tabc"
					],
					[
						"GET",
						"GET_STATUS_OF_OFFSET\tabc"
					],
					[
						"READ_",
						"READ_END_OFFSET\tabc"
					],
					[
						"WRITE",
						"WRITE_CUR_OFFSET\tabc"
					],
					[
						"READ",
						"READ_CUR_OFFSET\tabc"
					],
					[
						"valid",
						"validPalindrome\tabc"
					],
					[
						"bunck",
						"buncket\tabc"
					],
					[
						"bun",
						"bunckets\tabc"
					],
					[
						"sel",
						"select1st\t(stl_function.h)"
					],
					[
						"ALloc",
						"Alloc\t(stl_hashtable.h)"
					],
					[
						"eau",
						"equal_to\t(stl_function.h)"
					],
					[
						"_STL_HA",
						"_STL_HASH_MAP_H\tabc"
					],
					[
						"ALo",
						"Alloc\t(stl_hashtable.h)"
					],
					[
						"bu",
						"bunckets\tabc"
					],
					[
						"num",
						"num_elements\tabc"
					],
					[
						"buncket",
						"buncket\tabc"
					],
					[
						"destro",
						"destroy_node\tabc"
					],
					[
						"bkt",
						"bkt_key_num\tabc"
					],
					[
						"ojb",
						"obj2\t(stl_vector.h)"
					],
					[
						"bunc",
						"bunckets\tabc"
					],
					[
						"inert_e",
						"insert_equal_noresize\tabc"
					],
					[
						"inset_uni",
						"insert_unqiue_noresize\tabc"
					],
					[
						"forwa",
						"forward_iterator_tag\t(stl_slist.h)"
					],
					[
						"itear",
						"iterator\tabc"
					],
					[
						"iterao",
						"iterator\tabc"
					],
					[
						"Key",
						"KeyOfValue\tabc"
					],
					[
						"insert_qu",
						"insert_equal"
					],
					[
						"Ke",
						"KeyOfValue\tabc"
					],
					[
						"rb_tree_rota",
						"rb_tree_rotate_left\tabc"
					],
					[
						"color",
						"color\tabc"
					],
					[
						"ALlo",
						"Alloc\tabc"
					],
					[
						"ptr",
						"ptr\tabc"
					],
					[
						"slist_itear",
						"slist_iterator_base\tabc"
					],
					[
						"slist_i",
						"slist_iterator\tabc"
					],
					[
						"dista",
						"distance_type\tabc"
					],
					[
						"left",
						"left_child_value\tabc"
					],
					[
						"Rand",
						"RandomAccessIterator\t(stl_algobase.h)"
					],
					[
						"OBJ",
						"obj2"
					],
					[
						"itera",
						"iterator_category\tabc"
					],
					[
						"copy_",
						"copy_initialize\tabc"
					],
					[
						"create",
						"create_map_and_nodes\tabc"
					],
					[
						"cr",
						"create_map_and_nodes\tabc"
					],
					[
						"eme",
						"elements_before_pos\tabc"
					],
					[
						"uni",
						"uninitialized_copy\tabc"
					],
					[
						"un",
						"uninitialized_copy\tabc"
					],
					[
						"elem",
						"elements_after_pos\tabc"
					],
					[
						"data_",
						"data_allocate\tabc"
					],
					[
						"reserve_map",
						"reserve_map_at_back\tabc"
					],
					[
						"new_ma",
						"new_map_size\tabc"
					],
					[
						"uninitial",
						"uninitialized_fill_n\t(stl_vector.h)"
					],
					[
						"crea",
						"create_nodes\tabc"
					],
					[
						"creat",
						"create_map_and_nodes\tabc"
					],
					[
						"deque",
						"dequeue_iterator\tabc"
					],
					[
						"list_ite",
						"list_iterator\tabc"
					],
					[
						"IN",
						"Interator2\tabc"
					],
					[
						"In",
						"Interator1\tabc"
					],
					[
						"data",
						"data_allocator\tabc"
					],
					[
						"firs",
						"first2\tabc"
					],
					[
						"fir",
						"first1\tabc"
					],
					[
						"emp",
						"empty_initialized\tabc"
					],
					[
						"destr",
						"destroy_node\tabc"
					],
					[
						"list_i",
						"list_iterator\tabc"
					],
					[
						"list_nod",
						"list_node_base\tabc"
					],
					[
						"list",
						"list_iterator_base\tabc"
					],
					[
						"fii",
						"finish\tabc"
					],
					[
						"u",
						"uninitialized_copy\tabc"
					],
					[
						"el",
						"elements_after\tabc"
					],
					[
						"end",
						"end_of_storage\tabc"
					],
					[
						"fill",
						"fill_initialize\tabc"
					],
					[
						"allo",
						"allocate_and_fill\tabc"
					],
					[
						"iter",
						"iterator_category\tabc"
					],
					[
						"_d",
						"__default_alloc_template\tabc"
					],
					[
						"is",
						"is_POD\tabc"
					],
					[
						"is_P",
						"is_POD_type\tabc"
					],
					[
						"__c",
						"__copy_backward\tabc"
					],
					[
						"ite",
						"iterator_category\tabc"
					],
					[
						"Bi",
						"BidirectionalIterator2\tabc"
					],
					[
						"B",
						"BidirectionalIterator1\tabc"
					],
					[
						"___co",
						"___copy_backward_called\tabc"
					],
					[
						"Ra",
						"RandomAccessIterator2\tabc"
					],
					[
						"Random",
						"RandomAccessIterator2\tabc"
					],
					[
						"Ran",
						"RandomAccessIterator1\tabc"
					],
					[
						"___copy",
						"___copy_backward\tabc"
					],
					[
						"___cop",
						"___copy_backward\tabc"
					],
					[
						"has",
						"has_trivial_default_constructor\t(type_traits.h)"
					],
					[
						"Bid",
						"BidirectionalIterator2\tabc"
					],
					[
						"iterator_",
						"iterator_traits\t(stl_iterator.h)"
					],
					[
						"oU",
						"Outerator"
					],
					[
						"class",
						"class\tabc"
					],
					[
						"has_trivai",
						"has_trivial_assignment_operator\t(type_traits.h)"
					],
					[
						"mall",
						"malloc_alloc\tabc"
					],
					[
						"F",
						"FREELIST_INDEX\tabc"
					],
					[
						"FREE",
						"free_list"
					],
					[
						"PTR",
						"ptr_of_dest_list"
					],
					[
						"bytes",
						"bytes_to_get\tabc"
					],
					[
						"malloc_",
						"malloc_alloc\tabc"
					],
					[
						"__",
						"__malloc_alloc_template\tabc"
					],
					[
						"ma",
						"malloc_handler\tabc"
					],
					[
						"oom_",
						"oom_allocate\tabc"
					],
					[
						"malloc_ha",
						"malloc_handler\tabc"
					],
					[
						"malloc",
						"malloc_handler_t\tabc"
					],
					[
						"T",
						"T"
					],
					[
						"Ky",
						"KeyOfValue"
					],
					[
						"my_",
						"my_iterator"
					],
					[
						"ba",
						"black"
					],
					[
						"my",
						"my_space1"
					],
					[
						"ns",
						"namespace"
					],
					[
						"stac",
						"stack_obj"
					],
					[
						"stc",
						"stack_obj"
					],
					[
						"di",
						"difference_type"
					],
					[
						"r",
						"RandomAccessIterator"
					],
					[
						"I",
						"I"
					],
					[
						"set",
						"setNext"
					],
					[
						"oj",
						"obj2"
					],
					[
						"R",
						"RTM_GET"
					],
					[
						"AF_",
						"AF_INET6"
					],
					[
						"sockaddr_in",
						"sockaddr_in6"
					],
					[
						"co",
						"connect_nonb"
					],
					[
						"of",
						"oflagstr"
					],
					[
						"AF_in",
						"AF_INET"
					],
					[
						"sockaddr",
						"sockaddr_un"
					],
					[
						"ex",
						"exit_process1"
					],
					[
						"exit_pr",
						"exit_process2"
					],
					[
						"AF_inet",
						"AF_INET6"
					],
					[
						"n",
						"n"
					],
					[
						"d",
						"d"
					],
					[
						"sin_",
						"sin_family"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/home/guobin/Desktop/tmp.c",
					"settings":
					{
						"buffer_size": 185,
						"encoding": "UTF-8",
						"line_ending": "Unix",
						"name": "tmp.c"
					}
				}
			],
			"build_system": "Packages/C++/C++ Single File.sublime-build",
			"build_system_choices":
			[
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						]
					],
					[
						"Packages/C++/C++ Single File.sublime-build",
						""
					]
				],
				[
					[
						[
							"Packages/C++/C++ Single File.sublime-build",
							""
						],
						[
							"Packages/C++/C++ Single File.sublime-build",
							"Run"
						],
						[
							"Packages/Makefile/Make.sublime-build",
							""
						],
						[
							"Packages/Makefile/Make.sublime-build",
							"Clean"
						]
					],
					[
						"Packages/Makefile/Make.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"key",
						"Preferences: Key Bindings"
					],
					[
						"k",
						"Preferences: Key Bindings"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"remo",
						"Package Control: Remove Package"
					],
					[
						"dele",
						"ANF: Delete Current File"
					],
					[
						"ke",
						"Preferences: Key Bindings"
					],
					[
						"sett",
						"Preferences: Settings"
					],
					[
						"settings",
						"Preferences: Settings"
					],
					[
						"setting",
						"Preferences: Settings"
					],
					[
						"Package Control: ",
						"Package Control: List Packages"
					],
					[
						"keybindings",
						"Preferences: Key Bindings"
					],
					[
						"rei",
						"Indentation: Reindent Lines"
					],
					[
						"re",
						"Indentation: Reindent Lines"
					],
					[
						"c+",
						"Set Syntax: C++"
					],
					[
						"keyb",
						"Preferences: Key Bindings"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 238.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
					"sublime.log_commands(True)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
			],
			"file_history":
			[
				"/home/guobin/MyTinySTL/allocator/my_stl_alloc.h",
				"/home/guobin/MyTinySTL/allocator/defalloc.h",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/cltou.cpp",
				"/home/guobin/MyTinySTL/container/associative container/stl_hashtable.h",
				"/home/guobin/MyTinySTL/container/sequence container/stl_slist.h",
				"/home/guobin/MyTinySTL/container/sequence container/stl_list.h",
				"/home/guobin/MyTinySTL/container/sequence container/stl_vector.h",
				"/home/guobin/MyTinySTL/container/stl_dequeue.h",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/symbol.cc",
				"/home/guobin/MyTinySTL/container/associative container/stl_tree.h",
				"/home/guobin/MyTinySTL/container/sequence container/stl_heap.h",
				"/home/guobin/MyTinySTL/container/sequence container/stl_stack.h",
				"/home/guobin/MyTinySTL/algorithm/stl_algobase.h",
				"/home/guobin/MyTinySTL/container/associative container/stl_hash_map.h",
				"/home/guobin/MyTinySTL/container/associative container/stl_hash_set.h",
				"/home/guobin/MyTinySTL/functor/stl_function.h",
				"/home/guobin/MyTinySTL/container/associative container/stl_set.h",
				"/home/guobin/MyTinySTL/container/sequence container/stl_priority_queue.h",
				"/home/guobin/MyTinySTL/container/sequence container/stl_queue.h",
				"/home/guobin/MyTinySTL/iterator/stl_iterator.h",
				"/home/guobin/MyTinySTL/allocator/stl_uninitialized.h",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/foo.cc",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/foo.h",
				"/home/guobin/notes",
				"/home/guobin/srsLTE/lib/src/common/mac_pcap.cc",
				"/home/guobin/srsLTE/lib/include/srslte/common/common.h",
				"/home/guobin/srsLTE/lib/src/common/rlc_pcap.cc",
				"/home/guobin/srsLTE/lib/src/upper/rlc_am.cc",
				"/home/guobin/srsLTE/lib/include/srslte/upper/rlc_am.h",
				"/home/guobin/srsLTE/lib/include/srslte/upper/rlc_common.h",
				"/home/guobin/srsLTE/srsue/hdr/stack/ue_stack_lte.h",
				"/home/guobin/srsLTE/lib/include/srslte/upper/rlc_tx_queue.h",
				"/home/guobin/srsLTE/lib/include/srslte/upper/rlc_tm.h",
				"/home/guobin/srsLTE/lib/include/srslte/upper/rlc.h",
				"/home/guobin/srsLTE/lib/src/upper/pdcp_entity.cc",
				"/home/guobin/srsLTE/lib/include/srslte/upper/pdcp_entity.h",
				"/home/guobin/srsLTE/lib/include/srslte/interfaces/ue_interfaces.h",
				"/home/guobin/srsLTE/lib/include/srslte/upper/pdcp.h",
				"/home/guobin/srsLTE/lib/test/asn1/srslte_asn1_rrc_ul_dcch_test.cc",
				"/home/guobin/srsLTE/srsue/src/stack/rrc/rrc.cc",
				"/home/guobin/srsLTE/srsue/hdr/stack/rrc/rrc.h",
				"/home/guobin/srsLTE/srsue/src/stack/upper/nas.cc",
				"/home/guobin/srsLTE/srsue/src/ue.cc",
				"/home/guobin/srsLTE/srsue/src/stack/ue_stack_lte.cc",
				"/home/guobin/srsLTE/lib/include/srslte/common/pdu.h",
				"/home/guobin/srsLTE/lib/include/srslte/common/interfaces_common.h",
				"/home/guobin/srsLTE/lib/src/common/pdu.cc",
				"/home/guobin/srsLTE/srsue/hdr/stack/mac/ul_harq.h",
				"/home/guobin/srsLTE/lib/src/upper/rlc.cc",
				"/home/guobin/srsLTE/srsenb/src/stack/mac/ue.cc",
				"/home/guobin/MyTinySTL/allocator/stl_construct.h",
				"/home/guobin/MyTinySTL/iterator/type_traits.h",
				"/home/guobin/MyTinySTL/container/sequence container",
				"/home/guobin/Desktop/UNIX/UNIXC/allocator/defalloc.h",
				"/home/guobin/Desktop/UNIX/UNIXC/allocator/my_stl_alloc.h",
				"/home/guobin/Desktop/UNIX/UNIXC/foo.h",
				"/home/guobin/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
				"/home/guobin/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
				"/home/guobin/.config/sublime-text-3/Packages/Terminal/Default (Linux).sublime-keymap",
				"/home/guobin/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
				"/home/guobin/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
				"/home/guobin/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/exercise1.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/exercise.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/sharefile",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/SctpServer.c",
				"/home/guobin/Desktop/SctpServer.c",
				"/home/guobin/Desktop/Gtpv2Client.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/fifo.h",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/exercise2.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/UnixSocketServ.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/UnixSocketCli.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/svmsg.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/server1.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/test.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/process.c",
				"/home/guobin/Desktop/Gtpv2Server.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/test",
				"/dev/shm/my_first_shm",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/svmsg.h",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/get.c",
				"/home/guobin/Desktop/UNIX/UNIXC/exercise/cont.c"
			],
			"find":
			{
				"height": 29.0
			},
			"find_in_files":
			{
				"height": 355.0,
				"where_history":
				[
					"~srsLTE"
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"begin",
					"erase",
					"find",
					"back()",
					"__shared_count",
					"__shared_ptr",
					"_Sp_counted_base",
					"__shared_count",
					"__shared_count_base",
					"__shared_counted_base",
					"__shared_count_base",
					"__shared_count",
					"__shared_ptr",
					"_Sp_counted_deleter",
					"__shared_count",
					"__shared_ptr",
					"__shraed_ptr",
					"_Sp_counted_base",
					"__shared_count",
					"__shared_ptr",
					"__enable_shared_from_this_helper",
					"_M_weak_assign",
					"shared_from_this",
					"__shared_ptr",
					"shared_ptr",
					"shared_from_this",
					"__weak_ptr",
					"weak_ptr",
					"_M_weak_this",
					"enable_shared_from_this",
					"__shared_count",
					"__shared_ptr",
					"FILE",
					"_M_mutate(",
					"resize(",
					"erase",
					"reserve(",
					"reserve",
					"reserve(",
					"shrink_to_fit",
					"count(",
					"stoi",
					"find",
					"getline",
					"substr",
					"replace",
					"assign",
					"insert",
					"push_back",
					"clear",
					"assign",
					"compare",
					"copmare",
					"comparison",
					"resize",
					"compare",
					"at(",
					"operator[]",
					"size()",
					"size(){",
					"size()",
					"_M_set_length",
					"_M_create",
					"push_back",
					"reserve",
					"size(",
					"_M_construct(",
					"_M_construct",
					"_M_data",
					"_M_is_local()",
					"_M_allocated_capacity",
					"capacity",
					"resize",
					"reserve",
					"_M_construct",
					"basic_string(",
					"basic_string",
					"_M_data",
					"c_str(",
					"c_str",
					"capacity",
					"push_back",
					"string",
					"basic_string",
					"find",
					"npos",
					"find",
					"insert",
					"distance_type",
					"distance",
					"STACK",
					"operator=",
					"distance",
					"build",
					"write_sdu",
					"am ",
					"build_data_pdu",
					"pdu",
					"read_pdu",
					"pdu.h",
					"write_packet",
					"buffer_tx",
					"write_packet",
					"add_sdu",
					"read_pdu",
					"interfaces_common.h",
					"read_pdu",
					"write_sdu",
					"rlc_tx_queue",
					"write_sdu",
					"write_pdu",
					"handle_data_pdu",
					"rlc_amd_pdu_header_t",
					"attach request",
					"mac_pcap",
					"mac_pcap.h",
					"write_sdu",
					"rlc_array",
					"write_sdu",
					"pdcp_array",
					"rlc",
					"mac_pcap",
					"tx",
					"rlc",
					"srslte/upper/rlc.h",
					"rlc.h",
					"rlc_tm.h",
					"write_sdu"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
					"difference_type",
					"queue",
					"my_iterator_traits"
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/home/guobin/Desktop/UNIX/UNIXC"
				},
				{
					"path": "/home/guobin/MyTinySTL"
				},
				{
					"path": "/home/guobin/srsLTE"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/home/guobin/Desktop/tmp.c",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 185,
								"regions":
								{
								},
								"selection":
								[
									[
										132,
										132
									]
								],
								"settings":
								{
									"auto_name": "tmp.c",
									"bracket_highlighter.busy": false,
									"bracket_highlighter.clone": -1,
									"bracket_highlighter.clone_locations":
									{
										"close":
										{
											"1":
											[
												66,
												67
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/curly_bracket.png",
												"region.purplish"
											]
										},
										"open":
										{
											"1":
											[
												51,
												52
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.clone_regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content"
									],
									"bracket_highlighter.locations":
									{
										"close":
										{
											"1":
											[
												132,
												133
											]
										},
										"icon":
										{
											"1":
											[
												"Packages/BracketHighlighter/icons/double_quote.png",
												"region.greenish"
											]
										},
										"open":
										{
											"1":
											[
												122,
												123
											]
										},
										"unmatched":
										{
										}
									},
									"bracket_highlighter.regions":
									[
										"bh_angle",
										"bh_angle_center",
										"bh_angle_open",
										"bh_angle_close",
										"bh_angle_content",
										"bh_double_quote",
										"bh_double_quote_center",
										"bh_double_quote_open",
										"bh_double_quote_close",
										"bh_double_quote_content",
										"bh_tag",
										"bh_tag_center",
										"bh_tag_open",
										"bh_tag_close",
										"bh_tag_content",
										"bh_c_define",
										"bh_c_define_center",
										"bh_c_define_open",
										"bh_c_define_close",
										"bh_c_define_content",
										"bh_regex",
										"bh_regex_center",
										"bh_regex_open",
										"bh_regex_close",
										"bh_regex_content",
										"bh_single_quote",
										"bh_single_quote_center",
										"bh_single_quote_open",
										"bh_single_quote_close",
										"bh_single_quote_content",
										"bh_curly",
										"bh_curly_center",
										"bh_curly_open",
										"bh_curly_close",
										"bh_curly_content",
										"bh_round",
										"bh_round_center",
										"bh_round_open",
										"bh_round_close",
										"bh_round_content",
										"bh_square",
										"bh_square_center",
										"bh_square_open",
										"bh_square_close",
										"bh_square_content",
										"bh_default",
										"bh_default_center",
										"bh_default_open",
										"bh_default_close",
										"bh_default_content",
										"bh_unmatched",
										"bh_unmatched_center",
										"bh_unmatched_open",
										"bh_unmatched_close",
										"bh_unmatched_content"
									],
									"syntax": "Packages/C++/C.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 29.0
			},
			"input":
			{
				"height": 121.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 125.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,1,0,0,0,0,0,0,0,2560,1440",
			"project": "",
			"replace":
			{
				"height": 54.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"",
						"use_of_sublime"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 220.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 18,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
